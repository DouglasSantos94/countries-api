{"version":3,"sources":["containers/Header/styles.ts","containers/Header/index.tsx","styles/elements/index.tsx","api/countryApi.ts","components/BorderCountries/styles.ts","components/BorderCountries/index.tsx","components/BackButton/styles.ts","components/BackButton/index.tsx","containers/CountryView/styles.ts","containers/CountryView/index.tsx","components/CountryItem/styles.ts","components/CountryItem/index.tsx","containers/CountryList/styles.ts","containers/CountryList/index.tsx","routes/index.tsx","App.tsx","styles/generics/Reset.ts","index.tsx"],"names":["Wrapper","styled","header","Title","h1","Header","Base","createGlobalStyle","StyledLink","Link","InfoField","p","getCountry","countryName","axios","get","BordersList","ul","BordersWrapper","div","BorderButton","li","BorderCountries","borders","resolved","useState","countryBorders","setCountryBorders","useEffect","Promise","all","map","b","then","data","name","catch","e","console","log","getCountryBorders","border","to","Button","button","BackButton","type","className","Container","ButtonWrapper","ContentWrapper","CountryDetails","CountryName","CountryFlag","img","InfoWrapper","ResponsiveSkeleton","Skeleton","CountryView","pathname","useLocation","setResolved","setCountryName","alpha3code","capital","currencies","flag","nativeName","languages","population","region","subregion","topLevelDomain","country","setCountry","replace","src","alt","width","height","l","join","CountryItem","main","NavItem","nav","CountrySearch","RegionSelect","RegionList","props","show","RegionListItem","CountryList","countries","setCountries","regionFilter","setRegionFilter","setShow","getCountriesByRegion","handleRegionChange","target","textContent","onChange","value","placeholder","onClick","Routes","path","exact","component","App","Reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a49e685.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Wrapper = styled.header`\n  display: flex;\n  height: 50px;\n  align-items: center;\n  width: 100%;\n  background-color: hsl(0, 0%, 98%);\n  box-shadow: 1px 1px 2px rgba(168, 168, 168, 0.7);\n`;\n\nconst Title: React.FC = styled.h1<HTMLHeadingElement>`\n  font-family: \"Nunito Sans\";\n  font-weight: 800;\n  font-size: 20px;\n  margin-left: 30px;\n`;\n\nexport { Title, Wrapper };\n","import React from \"react\";\nimport { Title, Wrapper } from \"./styles\";\n\nconst Header: React.FC = () => (\n  <Wrapper>\n    <Title>Where in the world?</Title>\n  </Wrapper>\n);\n\nexport default Header;\n","import { Link } from \"react-router-dom\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst Base = createGlobalStyle`\n  body {\n    font-family: \"Nunito Sans\", sans-serif;\n    color: hsl(200, 15%, 8%);\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst InfoField = styled.p`\n  font-size: 14px;\n  margin: 4px 0;\n  max-width: 150px;\n\n  @media screen and (max-width: 500px) {\n    max-width: 100%;\n  }\n\n  span {\n    font-weight: 600;\n  }\n`;\n\nexport { Base, InfoField, StyledLink };\n","import axios, { AxiosResponse } from \"axios\";\n\nconst getCountries = (): Promise<AxiosResponse> =>\n  axios.get(\n    \"https://restcountries.eu/rest/v2/all?fields=name;nativeName;population;region;subregion;capital;topLevelDomain;currencies;languages;flag;borders;alpha3code\"\n  );\n\nconst getCountry = (countryName: string): Promise<AxiosResponse> =>\n  axios.get(`https://restcountries.eu/rest/v2/name/${countryName}`);\n\nconst getCountriesByRegion = (regionFilter: string): Promise<AxiosResponse> =>\n  axios.get(`https://restcountries.eu/rest/v2/region/${regionFilter}`);\n\nconst getCountryBorders = (borders: string[]): Promise<string[]> =>\n  Promise.all(\n    borders.map((b) =>\n      axios\n        .get(`https://restcountries.eu/rest/v2/alpha/${b}`)\n        .then(({ data: { name } }) => name)\n        .catch((e) => console.log(e))\n    )\n  );\n\nexport { getCountry, getCountryBorders, getCountries, getCountriesByRegion };\n","import styled from \"styled-components\";\n\nconst BordersList = styled.ul`\n  display: flex;\n  width: 75%;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n\n  @media screen and (max-width: 700px) {\n    width: 100%;\n  }\n`;\n\nconst BordersWrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  box-sizing: border-box;\n  height: 110px;\n  width: 100%;\n\n  @media screen and (max-width: 700px) {\n    flex-wrap: wrap;\n  }\n\n  p {\n    width: 25%;\n    font-weight: 600;\n\n    @media screen and (max-width: 700px) {\n      width: 100%;\n      text-align: center;\n    }\n  }\n`;\n\nconst BorderButton = styled.li`\n  font-weight: normal;\n  padding: 5px;\n  margin: 5px 10px;\n  box-shadow: 1px 1px 2px rgba(168, 168, 168, 0.7),\n    -1px -1px 2px rgba(168, 168, 168, 0.7);\n`;\n\nexport { BorderButton, BordersList, BordersWrapper };\n","import React, { useEffect, useState } from \"react\";\nimport { getCountryBorders } from \"api/countryApi\";\nimport { StyledLink } from \"styles/elements\";\nimport { BorderButton, BordersList, BordersWrapper } from \"./styles\";\n\ninterface BorderProps {\n  borders: string[];\n  resolved: boolean;\n}\n\nconst BorderCountries: React.FC<BorderProps> = ({ borders, resolved }) => {\n  const [countryBorders, setCountryBorders] = useState<string[]>(borders);\n\n  useEffect(() => {\n    if (resolved)\n      getCountryBorders(borders).then((name) => setCountryBorders(name));\n  }, [borders]);\n\n  const renderBorders = (): JSX.Element[] => {\n    return countryBorders.map((border) => {\n      return (\n        <BorderButton>\n          <StyledLink to={`/view-country/${border}`}>{border}</StyledLink>\n        </BorderButton>\n      );\n    });\n  };\n  return (\n    <BordersWrapper>\n      <p>Border Countries:</p>\n      <BordersList>{renderBorders()}</BordersList>\n    </BordersWrapper>\n  );\n};\n\nexport default BorderCountries;\n","import styled from \"styled-components\";\n\nconst Button = styled.button`\n  width: 100px;\n  font-weight: normal;\n  padding: 5px;\n  margin: 5px 10px;\n  box-shadow: 1px 1px 2px rgba(168, 168, 168, 0.7),\n    -1px -1px 2px rgba(168, 168, 168, 0.7);\n  background-color: white;\n  border: none;\n  text-decoration: none;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport { StyledLink } from \"styles/elements\";\nimport Button from \"./styles\";\n\nconst BackButton: React.FC = () => (\n  <StyledLink to=\"/\">\n    <Button type=\"button\">\n      <i className=\"fas fa-arrow-left\" />\n      Back\n    </Button>\n  </StyledLink>\n);\n\nexport default BackButton;\n","import styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst Container = styled.div`\n  font-family: \"Nunito Sans\", sans-serif;\n  font-size: 14px;\n  width: 100vw;\n  flex-direction: column;\n  height: 600px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  @media screen and (max-width: 500px) {\n    padding: 0 15px;\n  }\n\n  span {\n    font-weight: 600;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  width: 80%;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  height: 300px;\n  width: 80%;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n\nconst CountryDetails = styled.div`\n  width: 560px;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst CountryName = styled.h1`\n  box-sizing: border-box;\n  font-size: 25px;\n  font-weight: 800;\n  width: 500px;\n  display: flex;\n  align-items: flex-end;\n  height: 60px;\n  margin-bottom: 20px;\n\n  @media screen and (max-width: 700px) {\n    width: 100%;\n  }\n`;\n\nconst CountryFlag = styled.img`\n  width: 400px;\n  height: 300px;\n\n  @media screen and (max-width: 1000px) {\n    width: 100%;\n    height: 400px;\n  }\n\n  @media screen and (max-width: 500px) {\n    height: 300px;\n    width: 100%;\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  height: 150px;\n  padding: 15px 0;\n  width: 540px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-content: space-between;\n  flex-wrap: wrap;\n\n  p {\n    margin-bottom: 7px;\n    box-sizing: border-box;\n  }\n\n  @media screen and (max-width: 700px) {\n    width: 100%;\n    height: 200px;\n  }\n\n  @media screen and (max-width: 450px) {\n    height: 300px;\n  }\n`;\n\nconst ResponsiveSkeleton = styled(Skeleton)`\n  width: 560px;\n  height: 300px;\n\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nexport {\n  ButtonWrapper,\n  Container,\n  ContentWrapper,\n  CountryDetails,\n  InfoWrapper,\n  CountryName,\n  CountryFlag,\n  ResponsiveSkeleton,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { InfoField } from \"styles/elements\";\nimport BorderCountries from \"components/BorderCountries\";\nimport { getCountry } from \"api/countryApi\";\nimport Skeleton from \"react-loading-skeleton\";\nimport BackButton from \"components/BackButton\";\nimport {\n  ButtonWrapper,\n  Container,\n  ContentWrapper,\n  CountryDetails,\n  CountryFlag,\n  CountryName,\n  InfoWrapper,\n  ResponsiveSkeleton,\n} from \"./styles\";\n\ninterface CountryProps {\n  alpha3code: string;\n  borders: string[];\n  capital: string;\n  currencies: [{ name: string }];\n  flag: string;\n  nativeName: string;\n  name: string;\n  languages: [{ name: string }];\n  population: number;\n  region: string;\n  subregion: string;\n  topLevelDomain: string[];\n}\n\nconst CountryView: React.FC<CountryProps> = () => {\n  const { pathname } = useLocation();\n  const [resolved, setResolved] = useState(false);\n  const [countryName, setCountryName] = useState(\"\");\n\n  const [country, setCountry] = useState<CountryProps>({\n    alpha3code: \"\",\n    borders: [],\n    capital: \"\",\n    currencies: [{ name: \"\" }],\n    flag: \"\",\n    nativeName: \"\",\n    name: \"\",\n    languages: [{ name: \"\" }],\n    population: 0,\n    region: \"\",\n    subregion: \"\",\n    topLevelDomain: [],\n  });\n\n  useEffect(\n    () => setCountryName(pathname.replace(\"/view-country/\", \"\")),\n    [pathname]\n  );\n\n  useEffect(() => {\n    if (countryName)\n      getCountry(countryName).then(({ data }) => {\n        setCountry(data[0]);\n        setResolved(true);\n      });\n  }, [countryName]);\n\n  return (\n    <Container>\n      <ButtonWrapper>\n        <BackButton />\n      </ButtonWrapper>\n      <ContentWrapper>\n        {resolved ? (\n          <CountryFlag src={country.flag} alt={`${country.name} flag`} />\n        ) : (\n          <Skeleton width=\"400px\" height=\"300px\" />\n        )}\n        {resolved ? (\n          <CountryDetails>\n            <CountryName>{country.name}</CountryName>\n            <InfoWrapper>\n              <InfoField>\n                <span>Native Name:</span> {country.nativeName}\n              </InfoField>\n              <InfoField>\n                <span>Population:</span> {country.population}\n              </InfoField>\n              <InfoField>\n                <span>Region:</span> {country.region}\n              </InfoField>\n              <InfoField>\n                <span>Sub Region:</span> {country.subregion}\n              </InfoField>\n              <InfoField>\n                <span>Capital:</span> {country.capital}\n              </InfoField>\n              <InfoField>\n                <span>Top Level Domain:</span> {country.topLevelDomain}\n              </InfoField>\n              <InfoField>\n                <span>Currencies:</span> {country.currencies[0].name}\n              </InfoField>\n              <InfoField>\n                <span>Languages:</span>{\" \"}\n                {country.languages.map((l) => l.name).join(\", \")}\n              </InfoField>\n            </InfoWrapper>\n            {resolved && <BorderCountries borders={country.borders} resolved />}\n          </CountryDetails>\n        ) : (\n          <ResponsiveSkeleton />\n        )}\n      </ContentWrapper>\n    </Container>\n  );\n};\n\nexport default CountryView;\n","import styled from \"styled-components\";\n\nconst Container = styled.li`\n  font-family: \"Nunito Sans\", sans-serif;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 230px;\n  height: 280px;\n  margin: 30px;\n  border-radius: 6px;\n  box-shadow: 1px 1px 2px rgba(168, 168, 168, 0.7),\n    -1px -1px 2px rgba(168, 168, 168, 0.7);\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n    height: 450px;\n  }\n\n  img {\n    width: 100%;\n    box-sizing: border-box;\n    height: 140px;\n    border-radius: 6px 6px 0 0;\n    @media screen and (max-width: 600px) {\n      height: 300px;\n    }\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  padding: 20px;\n  box-sizing: border-box;\n  width: 100%;\n  height: 140px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  h1 {\n    font-size: 17px;\n    font-weight: 800;\n    margin-bottom: 10px;\n  }\n`;\n\nexport { Container, InfoWrapper };\n","import React from \"react\";\nimport { InfoField, StyledLink } from \"styles/elements\";\nimport { Container, InfoWrapper } from \"./styles\";\n\nexport interface IProps {\n  alpha3code: string;\n  capital: string;\n  name: string;\n  flag: string;\n  population: number;\n  region: string;\n}\n\nconst CountryItem: React.FC<IProps> = ({\n  alpha3code,\n  flag,\n  name,\n  population,\n  region,\n  capital,\n}) => {\n  return (\n    <Container key={alpha3code}>\n      <StyledLink to={`/view-country/${name}`}>\n        <img src={flag} alt={`${name} flag`} />\n        <InfoWrapper>\n          <h1>{name}</h1>\n          <InfoField>\n            <span>Population:</span> {population}\n          </InfoField>\n          <InfoField>\n            <span>Region:</span> {region}\n          </InfoField>\n          <InfoField>\n            <span>Capital:</span> {capital}\n          </InfoField>\n        </InfoWrapper>\n      </StyledLink>\n    </Container>\n  );\n};\n\nexport default CountryItem;\n","import styled from \"styled-components\";\n\ninterface RegionListProps {\n  show: boolean;\n}\n\ntype RegionListItemProps = RegionListProps;\n\nconst Container = styled.main`\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-evenly;\n    padding: 0;\n\n    @media screen and (max-width: 600px) {\n      flex-direction: column;\n      align-content: center;\n      justify-items: center;\n      padding: 0 20px;\n    }\n  }\n`;\n\nconst NavItem = styled.nav`\n  padding: 0 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 150px;\n\n  @media screen and (max-width: 800px) {\n    width: 100%;\n    flex-direction: column;\n    justify-content: space-evenly;\n    height: 280px;\n    padding: 0 20px;\n    box-sizing: border-box;\n  }\n\n  button {\n    width: 180px;\n    margin-bottom: 3px;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: inherit;\n    border-radius: 4px;\n    padding: 10px;\n    border: none;\n    box-shadow: 1px 1px 2px rgba(168, 168, 168, 0.7),\n      -1px -1px 2px rgba(168, 168, 168, 0.7);\n    background-color: white;\n  }\n`;\n\nconst CountrySearch = styled.div`\n  box-shadow: 1px 1px 2px rgba(168, 168, 168, 0.7),\n    -1px -1px 2px rgba(168, 168, 168, 0.7);\n  width: 30%;\n  border-radius: 6px;\n\n  @media (max-width: 800px) {\n    width: 100%;\n  }\n\n  i {\n    width: 10%;\n    padding-left: 5%;\n    box-sizing: border-box;\n    @media screen and (max-width: 800px) {\n      width: 20%;\n    }\n  }\n\n  input {\n    padding: 15px;\n    box-sizing: border-box;\n    border: none;\n    width: 90%;\n    @media (max-width: 800px) {\n      width: 80%;\n    }\n  }\n`;\n\nconst RegionSelect = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 200px;\n  justify-content: flex-start;\n  height: 200px;\n  width: 200px;\n  border-radius: 4px;\n  z-index: 2;\n\n  @media screen and (max-width: 800px) {\n    margin-top: 0;\n    width: 100%;\n  }\n\n  button {\n    width: 100%;\n  }\n`;\n\nconst RegionList = styled.ul<RegionListProps>`\n  display: ${(props) => (props.show ? \"flex\" : \"none\")};\n  flex-direction: column;\n  width: 100%;\n  box-shadow: 1px 1px 2px rgba(168, 168, 168, 0.7),\n    -1px -1px 2px rgba(168, 168, 168, 0.7);\n  background: white;\n  border-radius: 6px;\n  box-sizing: border-box;\n  align-items: flex-start;\n  max-height: ${(props) => (props.show ? \"100%\" : \"0\")};\n`;\n\nconst RegionListItem = styled.li<RegionListItemProps>`\n  display: ${(props) => (props.show ? \"visible\" : \"none\")};\n  max-height: ${(props) => (props.show ? \"100%\" : \"0\")};\n  list-style-type: none;\n  width: 100%;\n  box-sizing: border-box;\n  text-align: center;\n  background-color: transparent;\n\n  button {\n    box-shadow: none;\n  }\n`;\n\nexport {\n  Container,\n  CountrySearch,\n  RegionSelect,\n  RegionList,\n  RegionListItem,\n  NavItem,\n};\n","import React, { useEffect, useState } from \"react\";\nimport CountryItem from \"components/CountryItem\";\nimport { getCountries, getCountriesByRegion, getCountry } from \"api/countryApi\";\nimport {\n  Container,\n  CountrySearch,\n  NavItem,\n  RegionSelect,\n  RegionList,\n  RegionListItem,\n} from \"./styles\";\n\ninterface IProps {\n  countries: {\n    alpha3code: string;\n    capital: string;\n    flag: string;\n    name: string;\n    population: number;\n    region: string;\n  }[];\n}\n\nconst CountryList: React.FC<IProps> = () => {\n  const [countries, setCountries] = useState<IProps[\"countries\"]>([]);\n  const [regionFilter, setRegionFilter] = useState(\"\");\n  const [resolved, setResolved] = useState(false);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    getCountries().then(({ data }) => {\n      setCountries(data);\n      setResolved(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (resolved)\n      getCountriesByRegion(regionFilter).then(({ data }) => setCountries(data));\n  }, [regionFilter]);\n\n  const renderList = (): JSX.Element[] => {\n    return countries.map(\n      ({ alpha3code, name, population, region, capital, flag }) => {\n        return (\n          <CountryItem\n            alpha3code={alpha3code}\n            name={name}\n            population={population}\n            region={region}\n            flag={flag}\n            capital={capital}\n          />\n        );\n      }\n    );\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.value;\n    getCountry(name).then(({ data }) => {\n      setCountries(data);\n    });\n  };\n\n  const handleRegionChange = (e: any) => {\n    setRegionFilter(e.target.textContent);\n    setShow(!show);\n  };\n\n  return (\n    <Container>\n      <NavItem>\n        <CountrySearch>\n          <i className=\"fas fa-search\" />\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            placeholder=\"Search for a country...\"\n          />\n        </CountrySearch>\n        <RegionSelect>\n          <button type=\"button\" onClick={() => setShow(!show)}>\n            Filter By Region\n            <i className=\"fas fa-chevron-down\" />\n          </button>\n          <RegionList show={show}>\n            <RegionListItem show={show}>\n              <button type=\"button\" onClick={handleRegionChange}>\n                Africa\n              </button>\n            </RegionListItem>\n            <RegionListItem show={show}>\n              <button type=\"button\" onClick={handleRegionChange}>\n                Americas\n              </button>\n            </RegionListItem>\n            <RegionListItem show={show}>\n              <button type=\"button\" onClick={handleRegionChange}>\n                Asia\n              </button>\n            </RegionListItem>\n            <RegionListItem show={show}>\n              <button type=\"button\" onClick={handleRegionChange}>\n                Europe\n              </button>\n            </RegionListItem>\n            <RegionListItem show={show}>\n              <button type=\"button\" onClick={handleRegionChange}>\n                Oceania\n              </button>\n            </RegionListItem>\n          </RegionList>\n        </RegionSelect>\n      </NavItem>\n      <ul>{resolved && renderList()}</ul>\n    </Container>\n  );\n};\nexport default CountryList;\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport CountryView from \"containers/CountryView\";\nimport CountryList from \"containers/CountryList\";\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={CountryList} />\n    <Route path=\"/view-country/:name\" exact component={CountryView} />\n  </Switch>\n);\n\nexport default Routes;\n","import Header from \"containers/Header\";\nimport React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./routes\";\n\nfunction App(): JSX.Element {\n  return (\n    <>\n      <Header />\n      <Router>\n        <Routes />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst Reset = createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n`;\n\nexport default Reset;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Base } from \"./styles/elements\";\nimport Reset from \"./styles/generics/Reset\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Base />\n    <Reset />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}